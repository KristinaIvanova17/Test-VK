// AppDelegate.swift
import UIKit

@main
struct AppDelegate: UIResponder, UIApplicationDelegate {
    
    var window: UIWindow?
    
    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        // Override point for customization after application launch.
        return true
    }
    
    // MARK: UISceneSession Lifecycle
    
    func application(_ application: UIApplication, configurationForConnecting connectingSceneSession: UISceneSession, options: UIScene.ConnectionOptions) -> UISceneConfiguration {
        // Called when a new scene session is being created.
        // Use this method to select a configuration to create the new scene with.
        return UISceneConfiguration(name: "Default Configuration", sessionRole: connectingSceneSession.role)
    }
    
    func application(_ application: UIApplication, didDiscardSceneSessions sceneSessions: Set<UISceneSession>) {
        // Called when the user discards a scene session.
        // If any sessions were discarded while the application was not running, this will be called shortly after application:didFinishLaunchingWithOptions.
        // Use this method to release any resources that were specific to the discarded scenes, as they will not return.
    }
}

// ViewController.swift
import UIKit

class ViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Navigation setup
        navigationItem.title = "Мини-приложения"
        
        let weatherVC = WeatherViewController()
        let cityVC = CityViewController()
        let crosswordVC = CrosswordViewController()
        let ticTacToeVC = TicTacToeViewController()
        
        let controllers = [weatherVC, cityVC, crosswordVC, ticTacToeVC]
        
        let collectionView = UICollectionView(frame: self.view.bounds, collectionViewLayout: UICollectionViewFlowLayout())
        collectionView.dataSource = self
        collectionView.delegate = self
        collectionView.register(UINib(nibName: "CollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "CollectionViewCell")
        collectionView.backgroundColor = .white
        
        view.addSubview(collectionView)
        
        collectionView.reloadData()
    }
    
    // MARK: Collection View Data Source
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return controllers.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "CollectionViewCell", for: indexPath) as! CollectionViewCell
        
        let controller = controllers[indexPath.item]
        cell.controller = controller
        
        return cell
    }
    
    // MARK: Collection View Delegate
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        guard let controller = controllers[indexPath.item] else { return }
        
        present(controller, animated: true, completion: nil)
    }
}

// CollectionViewCell.swift
import UIKit

class CollectionViewCell: UICollectionViewCell {
    
    weak var controller: UIViewController?
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        contentView.backgroundColor = .systemBackground
        layer.cornerRadius = 10
        
        setupButton()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func setupButton() {
        let button = UIButton(type: .system)
        button.setTitle("Мини-приложение", for: .normal)
        button.translatesAutoresizingMaskIntoConstraints = false
        button.contentHorizontalAlignment = .center
        button.layer.cornerRadius = 10
        button.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)
        
        contentView.addSubview(button)
        
        NSLayoutConstraint.activate([
            button.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 20),
            button.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 20),
            button.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -20),
            button.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: -20),
        ])
    }
    
    @objc func buttonTapped() {
        guard let controller = controller else { return }
        
        performSegue(withIdentifier: "showDetail", sender: controller)
    }
}

// CustomSegue.swift
import Foundation
import UIKit

class CustomSegue: UIStoryboardSegue {
    
    override func perform() {
        guard let sourceViewController = source as? UIViewController,
              let destinationViewController = destination as? UIViewController else {
                  return
          }
          
          sourceViewController.present(destinationViewController, animated: true, completion: nil)
    }
}

// WeatherViewController.swift
import UIKit
import CoreLocation

class WeatherViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup views here
    }
}

// CityViewController.swift
import UIKit

class CityViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup views here
    }
}

// CrosswordViewController.swift
import UIKit

class CrosswordViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup views here
    }
}

// TicTacToeViewController.swift
import UIKit

class TicTacToeViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup views here
    }
}
